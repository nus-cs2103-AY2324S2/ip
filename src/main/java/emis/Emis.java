package emis;

import command.Command;
import exceptions.EmisException;

/**
 * Duke handles the initialization of application components and the main application logic.
 */
public class Emis {

    /** The storage component for managing data. */
    private Storage storage;

    /** The task list component for managing tasks. */
    private TaskList tasklist;

    /** The file path for storing application data. */
    private final String FILE_PATH = "./data/emis.txt";

    /**
     * Constructs a Duke object with default file path.
     * Initializes storage and tasklist components.
     */
    public Emis() {
        storage = new Storage(FILE_PATH);
        try {
            tasklist = new TaskList(storage.loadFromStorageFile());
        } catch (EmisException e) {
            tasklist = new TaskList();
        }
    }

    /**
     * Gets the response from Duke for the given input.
     * Parses the input, executes the command, and returns the response.
     *
     * @param input The input command from the user.
     * @return The response generated by Duke.
     */
    public String getResponse(String input) {
        try {
            Command command = Parser.parse(input.trim());
            return command.execute(tasklist, storage);
        } catch (EmisException e) {
            return e.getMessage();
        }
    }

}
